{
    "Welcome": "Bem-vindo!",
    "My name is Igor Antonio Almeida Santos, i am a Business student (Bachelor's degree) at Universidade Salgado de Oliveira, English student (Bachelor's degree) at Universidade Federal de Minas Gerais and a Java Full Stack Developer Junior.": "Meu nome é Igor Antonio Almeida Santos, sou estudante de Administração (Bacharelado) na Universidade Salgado de Oliveira, estudante de Letras - Inglês (Bacharelado) na Universidade Federal de Minas Gerais e Desenvolvedor Full Stack Java Junior.",
    "I have been working in the technology field since February 2022, when I conquered a full scholarship at Soulcode (Programming School) for the Java Full Stack Developer course where we studied the following technologies:": "Atuo na área de tecnologia desde fevereiro de 2022, onde conquistei uma bolsa integral na Escola de Programação Soulcode para o curso de Java Full Stack Developer onde estudamos as seguintes tecnologias:",
    "":"",
    "Home":"Início",
    "Portfolio":"Portfólio",
    "Contact":"Contato",
    "JavaScript Exercises":"Exercícios JavaScript",
    "Some exercises developed utilizing the JS technology":"Alguns exercícios desenvolvidos utilizando-se da tecnologia JS",
    "Angular Exercises":"Exercícios Angular",
    "Some exercises developed utilizing the Angular technology":"Alguns exercícios desenvolvidos utilizando-se da tecnologia Angular",
    "Projects":"Projetos",
    "Projects performed in group and individually.":"Projetos realizados em grupo e individualmente.",
    "Know more":"Saiba mais",
    "Link to access my Linkedin.":"Link para acessar meu Linkedin.",
    "Link to contact by WhatsApp.":"Link para entrar em contato pelo WhatsApp.",
    "Email for contact: igorantonio 052000@gmail.com":"Email para contato: igorantonio 052000@gmail.com",
    "Access Linkedin":"Acessar Linkedin",
    "Start Chat":"Iniciar Chat",
    "Send Email":"Encaminhar Email",
    "Start Code":"Iniciar Código",
    "Access Exercice":"Acessar Exercício",
    "Access Project":"Acessar Projeto",
    "Exercise 1":"Exercício 1",
    "Exercise 2":"Exercício 2",
    "Exercise 3":"Exercício 3",
    "Exercise 4":"Exercício 4",
    "Exercise 5":"Exercício 5",
    "Exercise 6":"Exercício 6",
    "Exercise 7":"Exercício 7",
    "Exercise 8":"Exercício 8",
    "-> Create a code that receives 3 values of length from a triangle and after that show an alert informing if the triangle is equilateral, isosceles or scalene.":"-> Crie um código que receba 3 valores do comprimento de um triângulo e depois mostre um alert informando se o triângulo é equilátero, isósceles ou escaleno.",
    "-> Do a script that reads three integer numbers and then show the highest.":"-> Faça um script que leia três números inteiros e mostre o maior deles.",
    "-> Create two variables and ask the user to enter two integer numbers by the prompt. After receiving the values of the variables, invert the values inside the variables, in other words, the value of the x variable goes to the variable y and the value of the variable y goes to the variable x. Show the before and after of the variables.":"-> Crie duas variáveis e peça para que o usuário digite dois números inteiros pelo prompt. Após receber os valores nas variáveis, inverta os valores dentro das variáveis, ou seja, o valor da variável x vai para a variável y e o valor da variável y vai para a variável x. Mostre o antes das variáveis e seu depois",
    "-> Create a program that asks how many numbers the user wants to enter (both integer and decimal), receive these numbers and save them inside and array. After that, show the total sum, the arithmetic average, every value of the array raised to a power of two, to square root and to cubic root.":"-> Crie um programa que pergunta quantos números o usuário deseja digitar (tanto inteiro quanto decimal) e receba os números e armazene esses números em um array e depois mostre a soma total deles, a média deles, mostre cada valor em uma potência de 2 e faça a raíz quadrada e cúbica de um.",
    "-> Ask the user to enter any text by the prompt, show this text with all the letters capital, lowercase and after that write in the console letter by letter from the text that the user entered. (Utilize the split method to do the last command).":"-> Peça ao usuário digitar algum texto no pelo prompt e depois mostre esse texto com todas as letras maiúsculas, com todas as letras minúsculas e depois escreva no console letra por letra do texto que o usuário digitou. (Utilize o método split para fazer esse último).",
    "-> Ask the user to enter a binary number, then, convert it to decimal.":"Peça ao usuário para digitar um número binário e o converta para decimal.",
    "-> Create and object “User” with the properties that you want. After that, show a message on the screen asking how many users must be saved. Then, ask all the necessary data to your “User” object and save it in a array. When all the objects “Users” get saved, show the value of every property of the user on the Browser screen.":"-> Crie um objeto 'Usuário' com as propriedades que você desejar. Depois, mostre uma mensagem na tela perguntando quantos usuários devem ser salvos. Após isso, peça todos os dados necessários para seu objeto usuário e depois o salve em um array. Quando todos os objetos Usuários forem salvos, mostre o valor de cada propriedade do usuário na tela do Browser.",
    "-> Create a site with a button and a image with a off lamp. When clicking the button and the image is a off lamp, the image of the off lamp will be changed to a lighted lamp. When clicking the button and the image is a lighted lamp, the image of the lighted lamp will be changed to a off lamp.":"-> Crie um site com um botão e uma imagem de uma lâmpada apagada. Quando se clicar no botão e a imagem for uma lâmpada apagada, você trocará para a imagem de uma lâmpada acesa. Quando se clicar no botão e a imagem for uma lâmpada acesa, você trocará para a imagem de uma lâmpada apagada.",
    "Project 1":"Projeto 1",
    "":"",
    "":"",
    "Create  components to the HTML input types (text, number, date, password, etc.) then styleze it as you wish.":"Crie componentes para tipo de input do HTML (text, number, date, password, etc...) e estilize-os da forma que desejar.",
    "Utilizing the concepts of data binding, create a counter website. This website must have two buttons: One to increment and other to discrement. Between these buttons must have a counter that starts from zero and will be controlled by the buttons created before. When clicking the increment button will be added +1 to the counter, when clicking the discrement button removed -1 to the counter. Obs: The utilization of Angular Material is mandatory.":"Utilizando os conceitos de data binding, crie um site contador. Esse site deve possuir dois botões: Um para incrementar e outro decrementar. Entre esse botões, deverá haver um contador começará do zero e será controlado pelos botões criados anteriormente. Quando clicar no botão de incrementar, será adicionando +1 ao contador, ao clicar no de decrementar, será removido -1 do contador. OBS: A utilização do Angular Material é obrigatória!!! ",
    "Create 3 cards. Inform the card content (title, price, content e color) utilizing the @Input. When clicking the button of the component, emitt an personalized event to the other component, showing the message 'package purchased'. Obs: Utilize the component MatSnackBar from Angular Material":"Criem os 3 cards da imagem abaixo. Inforem o conteúdo dos card (título, preço, conteúdo e cor do card) utilizando o @Input. Ao clicar no botão do componente, emita um evento personalizado para o outro componente, mostrando a mensagem pacote comprado. OBS: Utilizem o Angular Material. OBS 2: Para mostrar a mensagem, utilizem o componente MatSnackBar, do Angular Material ",
    "Create a ToDo List with Angular, save the todo on the Local Storage of the browser and also restore the todo from the localStorage to show them on your ToDo application. Create minor components that in the end will be shown on the ToDo List final screen (For exemple: todo-input, todo-item, todo-container, or whatever you think necessary). Utilize directives to make minor estylizations (For exemplo: buttons, inputs, etc.). If necessary, when clicking on the save/delete buttons on your ToDo, emitt an personalized event informing that one ToDo will be saved/deleted.":"Crie um ToDo List com Angular, salve as tarefas no Local Storage do navegador e também recupere as tarefas do localStorage para mostrá-las no seu ToDo. Crie componentes menores que, no final, se juntarão para criar a tela final do ToDo List (Por exemplo, todo-input, todo-item, todo-container, ou o que você achar necessário). Utilize diretivas para fazer estilização menores (Por exemplo, estilização de botões, inputs, etc.). Se necessário, ao clicar nos botões de salvar/deletar do seu ToDo, emita um evento personalizado informando que um ToDo deve ser salvo/deletado.",
    "(Reactive Forms) Create two forms with Angular, one utilizing the Template Driven Forms and other utilizing the Reactive Forms. Make the stylization that you want on both of the forms. Both of the forms must have the fields: name, surname, username, cpf, cellphone, adress, complement, two fields to the password and one button to send the form. On the password fields you must do a validation to inform if both fields are iquals. The other fields can be validated as you wish. If eveything is correct with the form, when clicking the send button, you must show a message box showing the data that was added. Obs: If you want, create a logic to add more numbers to the cellphone field in your form. Obs2: Utilize the Dialog from Angular Material to show the message box with the data that was informed in the form.":"(Reactive Forms) Crie dois formulários com Angular, um Utilizando o Template Driven Forms e outro utilizando o Reactive Forms. Faça a estilização que você deseja em cada um dos formulários. Os dois formulários devem possuir os campos: nome, sobrenome, username, cpf, telefone, endereço, complemento, dois campos para senha e um botão para enviar o formulário. Nesses campos de senha, você deve fazer uma validação para informar se o valor dos dois campos são iguais. Também valide os outros campos da forma que desejar. Se tudo estiver certo nos eu formulário, ao clicar no botão de enviar, você deve mostrar uma caixa de mensagem mostrando os dados que foram adicionados. OBS: Caso queira, crie uma lógica para adicionar mais números de telefone ao seu formulário. OBS2: Utilize o Angular Material para mostrar a caixa de mensagem com os dados informados, utilize o Dialog, do Angular Material",
    "(Template Driven Forms) Create two forms with Angular, one utilizing the Template Driven Forms and other utilizing the Reactive Forms. Make the stylization that you want on both of the forms. Both of the forms must have the fields: name, surname, username, cpf, cellphone, adress, complement, two fields to the password and one button to send the form. On the password fields you must do a validation to inform if both fields are iquals. The other fields can be validated as you wish. If eveything is correct with the form, when clicking the send button, you must show a message box showing the data that was added. Obs: If you want, create a logic to add more numbers to the cellphone field in your form. Obs2: Utilize the Dialog from Angular Material to show the message box with the data that was informed in the form.":"(Template Driven Forms) Crie dois formulários com Angular, um Utilizando o Template Driven Forms e outro utilizando o Reactive Forms. Faça a estilização que você deseja em cada um dos formulários. Os dois formulários devem possuir os campos: nome, sobrenome, username, cpf, telefone, endereço, complemento, dois campos para senha e um botão para enviar o formulário. Nesses campos de senha, você deve fazer uma validação para informar se o valor dos dois campos são iguais. Também valide os outros campos da forma que desejar. Se tudo estiver certo nos eu formulário, ao clicar no botão de enviar, você deve mostrar uma caixa de mensagem mostrando os dados que foram adicionados. OBS: Caso queira, crie uma lógica para adicionar mais números de telefone ao seu formulário. OBS2: Utilize o Angular Material para mostrar a caixa de mensagem com os dados informados, utilize o Dialog, do Angular Material",
    "Doing HTTP requisitions on Angular, create an application that do a search on the Github users utilizing a official github Api. Make a field to search for the user utilizing his username and a button to do the search. When clicking the button it will show a Dialog from Angular Material with the user data, data such as profile picture, description, followers number, how many peop´le the user is following and any other data that you wish. Also, you must restore the data from the repositories of the user, listing them inside the Dialog, below the user data. In each repository, show the name of it, the utilized language, number of stars and when clicking the repository info you must be redirected to the page of the repository that you clicked.":"Fazendo requisições HTTP no Angular, crie uma aplicação que faça pesquisa de usuários do Github utilizando a api oficial do github. Faça um campo para pesquisar o usuário pelo seu username e um botão para fazer a pesquisa. Ao clicar, ele mostrará um Dialog do Material com os dados do usuário, como foto de perfil, descrição, quantidade de seguidores, quantas pessoas o usuário está seguindo e qualquer outro dado que você desejar. Também recupere os dados dos repositórios e os liste também no Dialog, logo abaixo dos dados do usuário. De cada repositório, mostre o nome dele, a linguagem utilizada, quantidade de estrelas e, ao clicar nas infos de um repo, você será redirecionado à página do repositório que você clicou.",
    "":""
}